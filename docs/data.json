{
    "project": {
        "name": "Ember JSON API Resources",
        "description": "Lightweight persistence for an Ember CLI app using the JSON API 1.0 specification.",
        "version": "0.2.1",
        "url": "https://github.com/pixelhandler/ember-jsonapi-resources"
    },
    "files": {
        "addon/adapters/application.js": {
            "name": "addon/adapters/application.js",
            "modules": {
                "adapters": 1
            },
            "classes": {
                "ApplicationAdapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/initializers/model-setup.js": {
            "name": "addon/initializers/model-setup.js",
            "modules": {
                "initializers": 1
            },
            "classes": {},
            "fors": {
                "Resource": 1
            },
            "namespaces": {}
        },
        "addon/initializers/store.js": {
            "name": "addon/initializers/store.js",
            "modules": {},
            "classes": {},
            "fors": {
                "StoreService": 1
            },
            "namespaces": {}
        },
        "addon/mixins/adapter-api-host-proxy.js": {
            "name": "addon/mixins/adapter-api-host-proxy.js",
            "modules": {
                "adapter-api-host-proxy-mixin": 1
            },
            "classes": {
                "AdapterApiHostProxyMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/authorization.js": {
            "name": "addon/mixins/authorization.js",
            "modules": {
                "authorization": 1
            },
            "classes": {
                "AuthorizationMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/fetch.js": {
            "name": "addon/mixins/fetch.js",
            "modules": {
                "fetch": 1
            },
            "classes": {
                "FetchMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/resource-operations.js": {
            "name": "addon/mixins/resource-operations.js",
            "modules": {
                "resource-operations": 1
            },
            "classes": {
                "ResourceOperationsMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/service-cache.js": {
            "name": "addon/mixins/service-cache.js",
            "modules": {
                "cache": 1
            },
            "classes": {
                "ServiceCacheMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/transforms.js": {
            "name": "addon/mixins/transforms.js",
            "modules": {
                "transforms": 1
            },
            "classes": {
                "TransformsMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/resource.js": {
            "name": "addon/models/resource.js",
            "modules": {
                "resource": 1
            },
            "classes": {
                "Resource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/serializers/application.js": {
            "name": "addon/serializers/application.js",
            "modules": {
                "serializers": 1
            },
            "classes": {
                "ApplicationSerializer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/services/store.js": {
            "name": "addon/services/store.js",
            "modules": {
                "store": 1
            },
            "classes": {
                "StoreService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/utils/attr.js": {
            "name": "addon/utils/attr.js",
            "modules": {
                "utils": 1
            },
            "classes": {},
            "fors": {
                "Resource": 1
            },
            "namespaces": {}
        },
        "addon/utils/errors.js": {
            "name": "addon/utils/errors.js",
            "modules": {},
            "classes": {
                "ServerError": 1,
                "ClientError": 1,
                "FetchError": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/utils/has-many.js": {
            "name": "addon/utils/has-many.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Resource": 1
            },
            "namespaces": {}
        },
        "addon/utils/has-one.js": {
            "name": "addon/utils/has-one.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Resource": 1
            },
            "namespaces": {}
        },
        "addon/utils/is.js": {
            "name": "addon/utils/is.js",
            "modules": {},
            "classes": {
                "Utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/utils/related-proxy.js": {
            "name": "addon/utils/related-proxy.js",
            "modules": {},
            "classes": {
                "RelatedProxyUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/utils/transform-map.js": {
            "name": "addon/utils/transform-map.js",
            "modules": {},
            "classes": {
                "TransformMap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/utils/transforms.js": {
            "name": "addon/utils/transforms.js",
            "modules": {},
            "classes": {
                "TransformDateAttribute": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ember-jsonapi-resources": {
            "name": "ember-jsonapi-resources",
            "submodules": {
                "adapters": 1,
                "initializers": 1,
                "adapter-api-host-proxy-mixin": 1,
                "authorization": 1,
                "fetch": 1,
                "resource-operations": 1,
                "cache": 1,
                "transforms": 1,
                "resource": 1,
                "serializers": 1,
                "store": 1,
                "utils": 1
            },
            "elements": {},
            "classes": {
                "ApplicationAdapter": 1,
                "Resource": 1,
                "StoreService": 1,
                "AdapterApiHostProxyMixin": 1,
                "AuthorizationMixin": 1,
                "FetchMixin": 1,
                "ResourceOperationsMixin": 1,
                "ServiceCacheMixin": 1,
                "TransformsMixin": 1,
                "ApplicationSerializer": 1,
                "ServerError": 1,
                "ClientError": 1,
                "FetchError": 1,
                "Utils": 1,
                "RelatedProxyUtil": 1,
                "TransformMap": 1,
                "TransformDateAttribute": 1
            },
            "fors": {
                "Resource": 1,
                "StoreService": 1
            },
            "namespaces": {},
            "file": "addon/utils/transforms.js",
            "line": 9
        },
        "adapters": {
            "name": "adapters",
            "submodules": {},
            "elements": {},
            "classes": {
                "ApplicationAdapter": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/adapters/application.js",
            "line": 13,
            "description": "Adapter for a JSON API endpoint, use as a service for your backend"
        },
        "initializers": {
            "name": "initializers",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {
                "Resource": 1,
                "StoreService": 1
            },
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/initializers/model-setup.js",
            "line": 1
        },
        "adapter-api-host-proxy-mixin": {
            "name": "adapter-api-host-proxy-mixin",
            "submodules": {},
            "elements": {},
            "classes": {
                "AdapterApiHostProxyMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/adapter-api-host-proxy.js",
            "line": 7,
            "description": "Mixin to provide url rewrite for proxied api. Mostly used as example."
        },
        "authorization": {
            "name": "authorization",
            "submodules": {},
            "elements": {},
            "classes": {
                "AuthorizationMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/authorization.js",
            "line": 8,
            "description": "A Mixin class for storage of credential/token uses with a HTTP Authorization request-header\n\nThe default solution is to use localStorage['AuthorizationHeader'] for the credential"
        },
        "fetch": {
            "name": "fetch",
            "submodules": {},
            "elements": {},
            "classes": {
                "FetchMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/fetch.js",
            "line": 9,
            "description": "Fetch/Ajax methods for use with an Adapter calls `cacheUpdate`, `cacheResource`\nmethods and a `serializer` injection."
        },
        "resource-operations": {
            "name": "resource-operations",
            "submodules": {},
            "elements": {},
            "classes": {
                "ResourceOperationsMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/resource-operations.js",
            "line": 7,
            "description": "Mixin to provide interations between a Resource instance and service/adapter."
        },
        "cache": {
            "name": "cache",
            "submodules": {},
            "elements": {},
            "classes": {
                "ServiceCacheMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/service-cache.js",
            "line": 8,
            "description": "A Mixin class for caching JSON API resource objects"
        },
        "transforms": {
            "name": "transforms",
            "submodules": {},
            "elements": {},
            "classes": {
                "TransformsMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/transforms.js",
            "line": 9,
            "description": "A Mixin class for methods to transform resource attributes, includes date\nattribute methods to serialize and deserialize the date(time) to/from\nISO Format for use with `attr('date')`\n\nAny valid attribute type (string, boolean, number, object, array, date) can\nbe added to your app, just generate a transforms mixin and define other\ntypes if needed, and use the type when defining a resource attribute,\ne.g. attr('array')"
        },
        "resource": {
            "name": "resource",
            "submodules": {},
            "elements": {},
            "classes": {
                "Resource": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/models/resource.js",
            "line": 16,
            "description": "A Resource class to create JSON API resource objects. This is abstract, first\ndefine a prototype using `Resource.extend({ type: entity })`. Model prototypes\nare registered in the container as factories, they use the options:\n`{ instantiate: false, singleton: false }`. So, to create a model instance\nuse the owner API or the container to `lookup` the factory, for example:\n\n```js\nlet owner = (typeof Ember.getOwner === 'function') ? Ember.getOwner(this) : this.container;\nlet model = owner.lookup('model:entity').create({ attributes: { key: value } });\n```\n\nSee <http://jsonapi.org/format/#document-resource-objects>"
        },
        "serializers": {
            "name": "serializers",
            "submodules": {},
            "elements": {},
            "classes": {
                "ApplicationSerializer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/serializers/application.js",
            "line": 9,
            "description": "Serializer/Deserializer for a JSON API resource object, used by adapter.\n\nWhen extending use a mixin or define transform methods to serialize and/or\ndeserializer attributes based on the name or the type of attribute.\n\nThe methods use a naming convention:\n\n  - '[de]serialize' + 'AttrName' or 'TypeName' + 'Attribute'\n  - E.g. use `serializeNameAttribute` and `deserializeNameAttribute` in\n    a generated serializer for use with `name: attr()`\n  - Or, redefine `serializeDateAttribute` and `deserializeDateAttribute`\n    to use your own data transformation with `attr('date')` the default,\n    Date type [de]serialize methods transfrom to/from ISO Format.\n  - Transform methods based on the name of the attribute will be called\n    instead of any transform methods based on the type of the attribute."
        },
        "store": {
            "name": "store",
            "submodules": {},
            "elements": {},
            "classes": {
                "StoreService": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/services/store.js",
            "line": 9,
            "description": "Service for a JSON API endpoint a facade to your resource adapter"
        },
        "utils": {
            "name": "utils",
            "submodules": {},
            "elements": {},
            "classes": {
                "ServerError": 1,
                "ClientError": 1,
                "FetchError": 1,
                "Utils": 1,
                "RelatedProxyUtil": 1,
                "TransformMap": 1,
                "TransformDateAttribute": 1
            },
            "fors": {
                "Resource": 1
            },
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/utils/transforms.js",
            "line": 9,
            "tag": "main",
            "itemtype": "main",
            "description": "Abstract class to transform mapped data structures"
        }
    },
    "classes": {
        "ApplicationAdapter": {
            "name": "ApplicationAdapter",
            "shortname": "ApplicationAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "adapters",
            "namespace": "",
            "file": "addon/adapters/application.js",
            "line": 13,
            "description": "Adapter for a JSON API endpoint, use as a service for your backend",
            "requires": [
                "Ember.Inflector"
            ],
            "uses": [
                "Ember.Evented"
            ],
            "static": 1
        },
        "Resource": {
            "name": "Resource",
            "shortname": "Resource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "resource",
            "namespace": "",
            "file": "addon/models/resource.js",
            "line": 16,
            "description": "A Resource class to create JSON API resource objects. This is abstract, first\ndefine a prototype using `Resource.extend({ type: entity })`. Model prototypes\nare registered in the container as factories, they use the options:\n`{ instantiate: false, singleton: false }`. So, to create a model instance\nuse the owner API or the container to `lookup` the factory, for example:\n\n```js\nlet owner = (typeof Ember.getOwner === 'function') ? Ember.getOwner(this) : this.container;\nlet model = owner.lookup('model:entity').create({ attributes: { key: value } });\n```\n\nSee <http://jsonapi.org/format/#document-resource-objects>",
            "requires": [
                "Ember.Inflector"
            ],
            "static": 1
        },
        "StoreService": {
            "name": "StoreService",
            "shortname": "StoreService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "store",
            "namespace": "",
            "file": "addon/services/store.js",
            "line": 9,
            "description": "Service for a JSON API endpoint a facade to your resource adapter",
            "requires": [
                "Ember.Inflector"
            ],
            "static": 1
        },
        "AdapterApiHostProxyMixin": {
            "name": "AdapterApiHostProxyMixin",
            "shortname": "AdapterApiHostProxyMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "adapter-api-host-proxy-mixin",
            "namespace": "",
            "file": "addon/mixins/adapter-api-host-proxy.js",
            "line": 7,
            "description": "Mixin to provide url rewrite for proxied api. Mostly used as example.",
            "static": 1
        },
        "AuthorizationMixin": {
            "name": "AuthorizationMixin",
            "shortname": "AuthorizationMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "authorization",
            "namespace": "",
            "file": "addon/mixins/authorization.js",
            "line": 8,
            "description": "A Mixin class for storage of credential/token uses with a HTTP Authorization request-header\n\nThe default solution is to use localStorage['AuthorizationHeader'] for the credential",
            "static": 1
        },
        "FetchMixin": {
            "name": "FetchMixin",
            "shortname": "FetchMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "fetch",
            "namespace": "",
            "file": "addon/mixins/fetch.js",
            "line": 9,
            "description": "Fetch/Ajax methods for use with an Adapter calls `cacheUpdate`, `cacheResource`\nmethods and a `serializer` injection.",
            "static": 1
        },
        "ResourceOperationsMixin": {
            "name": "ResourceOperationsMixin",
            "shortname": "ResourceOperationsMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations",
            "namespace": "",
            "file": "addon/mixins/resource-operations.js",
            "line": 7,
            "description": "Mixin to provide interations between a Resource instance and service/adapter.",
            "static": 1
        },
        "ServiceCacheMixin": {
            "name": "ServiceCacheMixin",
            "shortname": "ServiceCacheMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "cache",
            "namespace": "",
            "file": "addon/mixins/service-cache.js",
            "line": 8,
            "description": "A Mixin class for caching JSON API resource objects",
            "requires": [
                "Ember.Inflector"
            ],
            "static": 1
        },
        "TransformsMixin": {
            "name": "TransformsMixin",
            "shortname": "TransformsMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "transforms",
            "namespace": "",
            "file": "addon/mixins/transforms.js",
            "line": 9,
            "description": "A Mixin class for methods to transform resource attributes, includes date\nattribute methods to serialize and deserialize the date(time) to/from\nISO Format for use with `attr('date')`\n\nAny valid attribute type (string, boolean, number, object, array, date) can\nbe added to your app, just generate a transforms mixin and define other\ntypes if needed, and use the type when defining a resource attribute,\ne.g. attr('array')",
            "static": 1
        },
        "ApplicationSerializer": {
            "name": "ApplicationSerializer",
            "shortname": "ApplicationSerializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "serializers",
            "namespace": "",
            "file": "addon/serializers/application.js",
            "line": 9,
            "description": "Serializer/Deserializer for a JSON API resource object, used by adapter.\n\nWhen extending use a mixin or define transform methods to serialize and/or\ndeserializer attributes based on the name or the type of attribute.\n\nThe methods use a naming convention:\n\n  - '[de]serialize' + 'AttrName' or 'TypeName' + 'Attribute'\n  - E.g. use `serializeNameAttribute` and `deserializeNameAttribute` in\n    a generated serializer for use with `name: attr()`\n  - Or, redefine `serializeDateAttribute` and `deserializeDateAttribute`\n    to use your own data transformation with `attr('date')` the default,\n    Date type [de]serialize methods transfrom to/from ISO Format.\n  - Transform methods based on the name of the attribute will be called\n    instead of any transform methods based on the type of the attribute.",
            "static": 1
        },
        "ServerError": {
            "name": "ServerError",
            "shortname": "ServerError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/errors.js",
            "line": 6,
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            }
        },
        "ClientError": {
            "name": "ClientError",
            "shortname": "ClientError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/errors.js",
            "line": 25,
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            }
        },
        "FetchError": {
            "name": "FetchError",
            "shortname": "FetchError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/errors.js",
            "line": 44,
            "is_constructor": 1,
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "or response object",
                    "type": "Error|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            }
        },
        "Utils": {
            "name": "Utils",
            "shortname": "Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/is.js",
            "line": 8,
            "description": "Abstract class to transform mapped data structures",
            "static": 1
        },
        "RelatedProxyUtil": {
            "name": "RelatedProxyUtil",
            "shortname": "RelatedProxyUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/related-proxy.js",
            "line": 11,
            "description": "Utility for creating promise proxy objects for related resources",
            "static": 1,
            "final": 1
        },
        "TransformMap": {
            "name": "TransformMap",
            "shortname": "TransformMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/transform-map.js",
            "line": 9,
            "description": "Abstract class to transform mapped data structures",
            "is_constructor": 1
        },
        "TransformDateAttribute": {
            "name": "TransformDateAttribute",
            "shortname": "TransformDateAttribute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "utils",
            "namespace": "",
            "file": "addon/utils/transforms.js",
            "line": 9,
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/adapters/application.js",
            "line": 23,
            "description": "The name of the entity",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 32,
            "description": "The url for the entity, e.g. /posts or /api/v1/posts\n\ndefaults to config.APP.API_HOST/config.APP.API_PATH/pluralize(type) if\nnot set explicitly.",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "required": 1,
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 52,
            "description": "Find resource(s) using an id or a using a query `{id: '', query: {}}`",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "options",
                    "description": "use a string for a single id or an object.",
                    "type": "Object|String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 82,
            "description": "Find a resource by id, optionally pass a query object, e.g. w/ filter param(s)\n\nUses a url like: /photos/1",
            "itemtype": "method",
            "name": "findOne",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 98,
            "description": "Find resources using an optional query object, e.g. w/ pagination params",
            "itemtype": "method",
            "name": "findQuery",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 112,
            "description": "Find resources by relationship or use a specificed (optional) service to find relation\n\nA Url like: /photos/1/relationships/photographer is a required param\n\n```js\nservice.findRelated('photographer', '/api/v1/photos/1/relationships/photographer');\n```\n\nOr, with option to find releated resource using a different service\n\n```js\nservice.findRelated({resource: 'photographer', type: 'people'}, url);\n```",
            "itemtype": "method",
            "name": "findRelated",
            "params": [
                {
                    "name": "resource",
                    "description": "name to lookup the service object w/ serializer",
                    "type": "String|Object",
                    "props": [
                        {
                            "name": "resource",
                            "description": "the name of the resource",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "the name of the resource",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 146,
            "description": "Create a new resource, sends a POST request, updates resource instance\nwith persisted data, and updates cache with persisted resource",
            "itemtype": "method",
            "name": "createResource",
            "params": [
                {
                    "name": "resource",
                    "description": "the instance to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 180,
            "description": "Patch an existing resource, sends a PATCH request.",
            "itemtype": "method",
            "name": "updateResource",
            "params": [
                {
                    "name": "resource",
                    "description": "instance to serialize the changed attributes",
                    "type": "Resource"
                },
                {
                    "name": "includeRelationships",
                    "description": "(optional) list of {String} relationships\n  to opt-into an update",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "resolves with PATCH response or `null` if nothing to update",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 207,
            "description": "Delete an existing resource, sends a DELETE request",
            "itemtype": "method",
            "name": "deleteResource",
            "params": [
                {
                    "name": "resource",
                    "description": "name (plural) or instance w/ self link",
                    "type": "String|Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 226,
            "description": "Create (add) a relationship for `to-many` relation, sends a POST request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nAdds a relation using a payload with a resource identifier object:\n\n```\n{\n  \"data\": [\n    { \"type\": \"comments\", \"id\": \"12\" }\n  ]\n}\n```",
            "itemtype": "method",
            "name": "createRelationship",
            "params": [
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 254,
            "description": "Patch a relationship, either adds or removes everyting, sends a PATCH request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-one-relationships>\n\nFor `to-one` relation:\n\n- Remove (delete) with payload: `{ \"data\": null }`\n- Create/Update with payload:\n  ```\n  {\n    \"data\": { \"type\": \"comments\", \"id\": \"1\" }\n  }\n  ```\n\nFor `to-many` relation:\n\n- Remove (delete) all with payload: `{ \"data\": [] }`\n- Replace all with payload:\n  ```\n  {\n    \"data\": [\n      { \"type\": \"comments\", \"id\": \"1\" },\n      { \"type\": \"comments\", \"id\": \"2\" }\n    ]\n  }\n  ```",
            "itemtype": "method",
            "name": "patchRelationship",
            "params": [
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 294,
            "description": "Deletes a relationship for `to-many` relation, sends a DELETE request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nRemove using a payload with the resource identifier object:\n\nFor `to-many`:\n\n```\n{\n  \"data\": [\n    { \"type\": \"comments\", \"id\": \"1\" }\n  ]\n}\n```",
            "itemtype": "method",
            "name": "deleteRelationship",
            "params": [
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 324,
            "itemtype": "method",
            "name": "_urlForRelationship",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "url",
                "type": "String"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 337,
            "description": "Fetches data using Fetch API or XMLHttpRequest",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "may include a query object or an update flag",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 355,
            "description": "Hook to customize the URL, e.g. if your API is behind a proxy and you need\nto swap a portion of the domain to make a request on the same domain.",
            "itemtype": "method",
            "name": "fetchUrl",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 367,
            "description": "Adds params and headers or Fetch request.\n\n- The HTTP Header is set for Content-Type: application/vnd.api+json\n- Sets Authorization header if accessible in the `authorizationCredential` property",
            "itemtype": "method",
            "name": "fetchOptions",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 389,
            "description": "Sets Authorization header if accessible in the `authorizationCredential` property",
            "itemtype": "method",
            "name": "fetchAuthorizationHeader",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 406,
            "description": "Authentication credentials/token used with HTTP authentication\nThis property should be added by an Authorization Mixin",
            "itemtype": "property",
            "name": "authorizationCredential",
            "type": "String",
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 415,
            "description": "The name of the Authorization request-header field\nThis property should be added by an Authorization Mixin",
            "itemtype": "property",
            "name": "authorizationHeaderField",
            "type": "String",
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 424,
            "description": "Noop as a hook for defining how deserialized resource objects are cached,\ne.g. in memory",
            "itemtype": "method",
            "name": "cacheResource",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 433,
            "description": "Noop as a hook for defining how to handle cache after updating a resource",
            "itemtype": "method",
            "name": "cacheUpdate",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 441,
            "description": "Noop as a hook to remove a resource from cached data",
            "itemtype": "method",
            "name": "cacheRemove",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapters"
        },
        {
            "file": "addon/initializers/model-setup.js",
            "line": 6,
            "description": "Initializer for the model factories, registers option to not initialize",
            "itemtype": "method",
            "name": "initialize",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "initializers"
        },
        {
            "file": "addon/initializers/store.js",
            "line": 8,
            "description": "Initializer for the store service, injects into the route and controller",
            "itemtype": "method",
            "name": "initialize",
            "requires": [
                "StoreService"
            ],
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "initializers"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 18,
            "description": "The name of the Authorization request-header field",
            "itemtype": "property",
            "name": "authorizationHeaderField",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 27,
            "description": "The name key, stored locally, that references the Authorization request-header credential/token",
            "itemtype": "property",
            "name": "authorizationHeaderStorageKey",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 36,
            "description": "Authentication credentials/token used with HTTP authentication",
            "itemtype": "property",
            "name": "authorizationCredential",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 55,
            "description": "When using the FetchMixin and using ajax instead of fetch, setup XHR\nbeforeSend with Authorization Header",
            "itemtype": "method",
            "name": "ajaxPrefilter",
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 74,
            "description": "Storage type localStorage or sessionStorage",
            "itemtype": "property",
            "name": "_storage",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 17,
            "description": "Flag indicates whether to use window.fetch or not, computed from `useAjax`",
            "itemtype": "property",
            "name": "useFetch",
            "type": "Boolean",
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 28,
            "description": "Flag to use $.ajax instead of window.fetch",
            "itemtype": "property",
            "name": "useAjax",
            "type": "Boolean",
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 36,
            "description": "Makes a fetch request via Fetch API (may use polyfill)\n\nSee http://updates.html5rocks.com/2015/03/introduction-to-fetch",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_fetch",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- May include a query object or an update flag",
                    "type": "Object"
                },
                {
                    "name": "isUpdate",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 66,
            "description": "Fetch server error handler ~ status >= 500",
            "itemtype": "method",
            "name": "fetchServerErrorHandler",
            "params": [
                {
                    "name": "response",
                    "description": "- Fetch response",
                    "type": "Response"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 81,
            "description": "Fetch client error handler ~ status >= 400",
            "itemtype": "method",
            "name": "fetchClientErrorHandler",
            "params": [
                {
                    "name": "response",
                    "description": "- Fetch response",
                    "type": "Response"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 96,
            "description": "Fetch generic error handler",
            "itemtype": "method",
            "name": "fetchErrorHandler",
            "params": [
                {
                    "name": "error",
                    "description": "- Fetch error or response object",
                    "type": "Error|Response"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 118,
            "description": "Fetch 204 No Content handler",
            "itemtype": "method",
            "name": "fetchNoContentHandler",
            "params": [
                {
                    "name": "response",
                    "description": "- Fetch response",
                    "type": "Response"
                },
                {
                    "name": "resolve",
                    "description": "- Promise resolve handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 131,
            "description": "Fetch 20x Success handler",
            "itemtype": "method",
            "name": "fetchSuccessHandler",
            "params": [
                {
                    "name": "response",
                    "description": "- Fetch response",
                    "type": "Response"
                },
                {
                    "name": "resolve",
                    "description": "- Promise resolve handler",
                    "type": "Function"
                },
                {
                    "name": "isUpdate",
                    "description": "- Used with patch to update a resource",
                    "type": "Boolean"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 156,
            "description": "Makes an XHR request via $.ajax",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_ajax",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- may include a query object or an update flag",
                    "type": "Object"
                },
                {
                    "name": "isUpdate",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "requires": [
                "jQuery"
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 177,
            "itemtype": "method",
            "name": "ajaxFailHandler",
            "params": [
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "closure with reject handler",
                "type": "Function"
            },
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 200,
            "itemtype": "method",
            "name": "ajaxDoneHandler",
            "params": [
                {
                    "name": "resolve",
                    "description": "- Promise resolve handler",
                    "type": "Function"
                },
                {
                    "name": "isUpdate",
                    "description": "- Used with patch to update a resource",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "closure with resolve handler",
                "type": "Function"
            },
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 222,
            "description": "Ajax server error handler ~ status >= 500",
            "itemtype": "method",
            "name": "ajaxServerErrorHandler",
            "params": [
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "textStatus",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "errorThrown",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 237,
            "description": "Ajax client error handler ~ status >= 400",
            "itemtype": "method",
            "name": "ajaxClientErrorHandler",
            "params": [
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "textStatus",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "errorThrown",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 252,
            "description": "Ajax Generic error handler",
            "itemtype": "method",
            "name": "ajaxErrorHandler",
            "params": [
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "textStatus",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "errorThrown",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "reject",
                    "description": "- Promise reject handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 267,
            "description": "Ajax 204 No Content handler",
            "itemtype": "method",
            "name": "ajaxNoContentHandler",
            "params": [
                {
                    "name": "json",
                    "description": "- payload should be empty",
                    "type": "Object"
                },
                {
                    "name": "textStatus",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "JqXHR"
                },
                {
                    "name": "resolve",
                    "description": "- Promise resolve handler",
                    "type": "Function"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 280,
            "description": "Ajax 20x Success handler",
            "itemtype": "method",
            "name": "ajaxSuccessHandler",
            "params": [
                {
                    "name": "json",
                    "description": "- payload",
                    "type": "Object"
                },
                {
                    "name": "textStatus",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "JqXHR"
                },
                {
                    "name": "resolve",
                    "description": "- Promise resolve handler",
                    "type": "Function"
                },
                {
                    "name": "isUpdate",
                    "description": "- Used with patch to update a resource",
                    "type": "Boolean"
                }
            ],
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/fetch.js",
            "line": 308,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getXHRHeaders",
            "params": [
                {
                    "name": "jqXHR",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "FetchMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "fetch"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 14,
            "description": "The service object for the entity (adapter with cache and serializer)",
            "itemtype": "property",
            "name": "service",
            "type": "Object",
            "required": 1,
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 23,
            "description": "Create a new resource, calls service to persist new model\n\n- See: <http://jsonapi.org/format/#crud-creating>\n\nCalling `this.createResource` will call the service to persist the new model,\nvia it's `createResource` method.",
            "itemtype": "method",
            "name": "createResource",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 38,
            "description": "Update a persistend resource, calls service to persist changes\n\n- See: <http://jsonapi.org/format/#crud-updating>\n\nCalling `this.updateResource` will call the service to persist the changes,\nvia it's `updateResource` method.",
            "itemtype": "method",
            "name": "updateResource",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 53,
            "description": "Delete a persistend resource, calls service to DELETE via API request\n\n- See: <http://jsonapi.org/format/#crud-deleting>\n\nCalling `this.deleteResource` will call the service to remove the destroy,\nvia it's `deleteResource` method.",
            "itemtype": "method",
            "name": "deleteResource",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 68,
            "description": "Create a relationship for a `to-many` relation, calls service to persist.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nCalling `this.createRelationship` will call the service to persist the changes,\nvia it's `createRelationship` method. Since the default `catch` for this\nmethod is to rollback the relationships, an optional `errorCallback` function\ncan be used to handle the error response.",
            "itemtype": "method",
            "name": "createRelationship",
            "params": [
                {
                    "name": "relationship",
                    "description": "name (plural) to find the url",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                },
                {
                    "name": "errorCallback",
                    "description": "`function (error) {}`",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 97,
            "description": "Update a relationship, works with both `to-many` and `to-one`. Primarily use\nwith `to-one` as `to-many` is for a full replacement only.\n\nFor a `to-one` relationship, add, replace or remove, and persist the change\nusing the service. With an id the relation will be added or changed, with\n`null` a relationship will be removed.\n\nSee: <http://jsonapi.org/format/#crud-updating-resource-relationships>\n\nFor `to-many` relationships the backend will need to support editing as a set,\nfull replacement (most often that may be disabled).\n\nUpdate a relationship by adding or removing using a list, id, or null. When\nadding an id for a to-many relationship send one or more ids, include the\nexisting ids as well. When removing from a to-many relationship pass the ids\nthat should remain, missing ids will be removed, or remove all with an empty\narray.\n\nCalling `this.updateRelationship` will call the service to persist the changes,\nvia it's `patchRelationship` method. Since the default `catch` for this\nmethod is to rollback the relationships, an optional `errorCallback` function\ncan be used to handle the error response.",
            "itemtype": "method",
            "name": "updateRelationship",
            "params": [
                {
                    "name": "relationship",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "ids",
                    "description": "can be only one id or null to remove",
                    "type": "Array|String|null"
                },
                {
                    "name": "errorCallback",
                    "description": "`function (error) {}`",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/resource-operations.js",
            "line": 147,
            "description": "Deletes a relationship for `to-many` relation, calls service to persist.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nCalling `this.deleteRelationship` will call the service to persist the changes,\nvia it's `deleteRelationship` method. Since the default `catch` for this\nmethod is to rollback the relationships, an optional `errorCallback` function\ncan be used to handle the error response.",
            "itemtype": "method",
            "name": "deleteRelationship",
            "params": [
                {
                    "name": "relationship",
                    "description": "name (plural) to find the url",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                },
                {
                    "name": "errorCallback",
                    "description": "`function (error) {}`",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ResourceOperationsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "resource-operations"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 17,
            "description": "Cache object",
            "itemtype": "property",
            "name": "cache",
            "type": "Object",
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 25,
            "description": "Initialize a cache object",
            "itemtype": "method",
            "name": "initCache",
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 37,
            "description": "Store response object(s) in the cache",
            "itemtype": "method",
            "name": "cacheResource",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 48,
            "description": "Store meta data in the cache",
            "itemtype": "method",
            "name": "cacheMeta",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 60,
            "description": "Store resource objects in the `data` array of the cache",
            "itemtype": "method",
            "name": "cacheData",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 91,
            "description": "Add or update cache data",
            "itemtype": "method",
            "name": "cacheUpdate",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 119,
            "description": "Store meta from headers on resource meta, window.fetch includes\na headers object in the response use `headers.get` to lookup data\nfrom the headers for cache-control, date, and etag.",
            "itemtype": "method",
            "name": "cacheControl",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 146,
            "description": "Lookup a resource from cached data",
            "itemtype": "method",
            "name": "cacheLookup",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource|undefined"
            },
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 163,
            "description": "Remove a resource from cached data",
            "itemtype": "method",
            "name": "cacheRemove",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/transforms.js",
            "line": 23,
            "itemtype": "method",
            "name": "serializeDateAttribute",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date|String"
                }
            ],
            "return": {
                "description": "date value as ISO String for JSON payload, or null",
                "type": "String|Null"
            },
            "class": "TransformsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "transforms"
        },
        {
            "file": "addon/mixins/transforms.js",
            "line": 32,
            "itemtype": "method",
            "name": "deserializeDateAttribute",
            "params": [
                {
                    "name": "date",
                    "description": "usually in ISO format, must be a valid argument for Date",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date value from JSON payload, or null",
                "type": "Date|Null"
            },
            "class": "TransformsMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "transforms"
        },
        {
            "file": "addon/models/resource.js",
            "line": 37,
            "description": "Extending Prototypes Must define a `type` value for the entity, e.g. `posts`",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 46,
            "description": "Persisted resource ID value",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "required": 1,
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 55,
            "description": "An optional `attributes` property of for a JSON API Resource object, setup in create()\n\nThis object will keep the values from the response object and may be mutable\nUse this as a refence for creating computed properties\n\nFor example the `attr()` helper sets up a properties based on this content",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "attributes",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 69,
            "description": "An optional `relationships` property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "relationships",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 78,
            "description": "An optional `links` property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "links",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 87,
            "description": "An optional property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "meta",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 96,
            "description": "Hash of attributes for changed/previous values",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_attributes",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 105,
            "description": "Hash of relationships that were changed",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_relationships",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 114,
            "description": "Flag for new instance, e.g. not persisted",
            "itemtype": "property",
            "name": "isNew",
            "type": "Boolean",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 122,
            "description": "Custom `toString` method used for clarity that the instance is a JSON API Resource kind of object",
            "itemtype": "method",
            "name": "toString",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 133,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateRelationshipsData",
            "params": [
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "ids",
                    "description": "",
                    "type": "Array|String|null"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 160,
            "itemtype": "method",
            "name": "addRelationships",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "ids",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 171,
            "itemtype": "method",
            "name": "removeRelationships",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "ids",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 182,
            "description": "Adds related resource identifier object to the relationship data.\n\nAlso sets or adds to the `content` of the related proxy object.\n\n- For has-many relations the related identifier object is added to\n  the resource linkage data array.\n- For has-one relations the resource identifier object is assigned,\n  so the relation may be replaced.\n\nSee:\n- http://jsonapi.org/format/#document-resource-object-linkage\n- http://jsonapi.org/format/#document-resource-identifier-objects",
            "itemtype": "method",
            "name": "addRelationship",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 231,
            "description": "Track additions of relationships using a resource identifier objects:\n\n```js\n{ relation {String}, type {String}, kind {String} }`\n```",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_relationAdded",
            "params": [
                {
                    "name": "relation",
                    "description": "name of a related resource",
                    "type": "String"
                },
                {
                    "name": "identifier,",
                    "description": "a resource identifier object `{type: String, id: String}`",
                    "type": "Object"
                },
                {
                    "name": "previous,",
                    "description": "resource identifier object or array of identifiers",
                    "type": "Object|Array"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 260,
            "description": "Removes resource identifier object of the relationship data. Also, sets the\n`content` of the related (computed property's) proxy object to `null`.\n\n- For has-one relations the (resource linkage) data is set to `null`.\n- For has-many relations the resource identifier object is removed from\n  the resource Linkage `data` array.\n\nSee:\n- http://jsonapi.org/format/#document-resource-object-linkage\n- http://jsonapi.org/format/#document-resource-identifier-objects",
            "itemtype": "method",
            "name": "removeRelationship",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 301,
            "description": "Track removals of relationships",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_relationRemoved",
            "params": [
                {
                    "name": "relation",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 324,
            "itemtype": "method",
            "name": "changedAttributes",
            "return": {
                "description": "the changed attributes",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 342,
            "itemtype": "method",
            "name": "previousAttributes",
            "return": {
                "description": "the previous attributes",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 360,
            "itemtype": "method",
            "name": "previousAttributes",
            "return": {
                "description": "the previous attributes",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 375,
            "description": "Rollback changes to attributes and relationships",
            "itemtype": "method",
            "name": "rollback",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 385,
            "description": "Revert to previous attributes",
            "itemtype": "method",
            "name": "rollbackAttributes",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 401,
            "description": "Reset tracked changed/previous attrs",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_resetAttributes",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 415,
            "description": "Revert to previous relationships",
            "itemtype": "method",
            "name": "rollbackRelationships",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 445,
            "description": "Reset tracked relationship changes",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_resetRelationships",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 459,
            "itemtype": "method",
            "name": "relationMetadata",
            "params": [
                {
                    "name": "property",
                    "description": "name of a related resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`{ relation {String}, type {String}, kind {String} }`",
                "type": "Object|undefined"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 474,
            "description": "Sets all payload properties on the resource and resets private _attributes\nused for changed/previous tracking",
            "itemtype": "method",
            "name": "didUpdateResource",
            "params": [
                {
                    "name": "json",
                    "description": "the updated data for the resource",
                    "type": "Object"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 487,
            "description": "Sets the relationships data, used after the promise proxy resolves by\nhasOne and hasMany helpers",
            "itemtype": "method",
            "name": "didResolveProxyRelation",
            "params": [
                {
                    "name": "relation",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "kind",
                    "description": "of relation hasOne or hasMany",
                    "type": "String"
                },
                {
                    "name": "related",
                    "description": "resource(s)",
                    "type": "Array|Object"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 517,
            "description": "A local cache duration, to minimize duplicate fetch requests",
            "itemtype": "property",
            "name": "cacheDuration",
            "type": "Number",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 525,
            "itemtype": "property",
            "name": "isCacheExpired",
            "type": "Boolean",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 537,
            "description": "To protect the JSON API Resource properties for attributes, links and\nrelationships these objects are setup during create(). This has to be\ndefined since the attr() helper needs to have new objects for each instance,\nto project from keeping a reference on the prototype.\n\nThe create method should only be called after looking up a factory from the\ncontainer, for example in a route's model hook:\n\n```\nmodel() {\n  let owner = (typeof Ember.getOwner === 'function') ? Ember.getOwner(this) : this.container;\n  return owner.lookup('model:post').create({\n    attributes: {\n      title: 'The JSON API 1.0 Spec Rocks!'\n    }\n  });\n}\n```\n\nThe create method uses the container to lookup the factory's prototype and\nfind the computed properties used for relations to setup the relationships\nfor the Resource instance you create. Calling Resource#create without using\nthe factory lookup will result in an instance without a reference to the\napplication's container and you will have to manually setup the relationships\nobject prior to adding a relationship.",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "return": {
                "description": "instance with protected objects:\n  `attributes`, `links` and `relationships`",
                "type": "Resource"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 31,
            "description": "Serialize resource for the request payload",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "resource",
                    "description": "- object to serialize",
                    "type": "Resource|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|Array"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 50,
            "itemtype": "method",
            "name": "serializeResources",
            "params": [
                {
                    "name": "collection",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 62,
            "description": "Serialize a resource object",
            "itemtype": "method",
            "name": "serializeResource",
            "params": [
                {
                    "name": "object",
                    "description": "to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 83,
            "description": "Serialize a resource object, but only the changed attributes",
            "itemtype": "method",
            "name": "serializeChanged",
            "params": [
                {
                    "name": "object",
                    "description": "to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 104,
            "itemtype": "method",
            "name": "serializeRelationships",
            "params": [
                {
                    "name": "resource",
                    "description": "with relationships to serialize",
                    "type": "Resource"
                },
                {
                    "name": "relationships",
                    "description": "list of {String} relationship properties",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "the serialized `relationship` node for the JSON payload",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 123,
            "itemtype": "method",
            "name": "serializeRelationship",
            "params": [
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "(optional) of the related resource",
                    "type": "String|undefined"
                }
            ],
            "return": {
                "description": "payload",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 142,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_intersection",
            "params": [
                {
                    "name": "first",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "second",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 163,
            "description": "Deserialize response objects from the request payload",
            "itemtype": "method",
            "name": "deserialize",
            "params": [
                {
                    "name": "json",
                    "description": "- response object, extract resource(s)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Ember.Array|Resource"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 180,
            "description": "Deserialize response objects in the payload data",
            "itemtype": "method",
            "name": "deserializeResources",
            "params": [
                {
                    "name": "collection",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|Ember.Array"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 194,
            "description": "Deserialize response an object in the payload data",
            "itemtype": "method",
            "name": "deserializeResource",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 206,
            "description": "Deserialize optional included array of payload and add to service cache",
            "itemtype": "method",
            "name": "deserializeIncluded",
            "params": [
                {
                    "name": "related",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "resp",
                    "description": "(optional) e.g. headers, meta, etc.",
                    "type": "Object"
                }
            ],
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 226,
            "description": "Transform attributes, serialize or deserialize by specified method or\nper type of attribute, e.g. date.\n\nYour serializer may define a specific method for a type of attribute,\ni.e. `serializeDateAttribute` and/or `deserializeDateAttribute`. Likewise,\nyour serializer may define a specific method for the name of an attribute,\nlike `serializeUpdatedAtAttribute` and `deserializeUpdatedAtAttribute`.\n\nDuring transformation a method based on the name of the attribute takes\npriority over a transform method based on the type of attribute, e.g. date.",
            "itemtype": "method",
            "name": "transformAttributes",
            "params": [
                {
                    "name": "json",
                    "description": "with attributes hash of resource properties to be transformed",
                    "type": "Object"
                },
                {
                    "name": "operation",
                    "description": "perform a serialize or deserialize\n  operation, the default operation is to deserialize when not passed",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'deserialize'"
                }
            ],
            "return": {
                "description": "json",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 267,
            "description": "Create a Resource from a JSON API Resource Object\n\nSee <http://jsonapi.org/format/#document-resource-objects>",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_createResourceInstance",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "(Resource) instance"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 294,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_lookupFactory",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "factory for creating resource instances",
                "type": "Function"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializers"
        },
        {
            "file": "addon/services/store.js",
            "line": 18,
            "description": "Find resource(s) using an id or a using a query `{id: '', query: {}}`",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized unless a `{singleton: true}` option is passed",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "object or (string) id",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 31,
            "description": "Access to the cached object",
            "itemtype": "method",
            "name": "all",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Ember.Array"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 43,
            "description": "Create a new resource, sends a POST request",
            "itemtype": "method",
            "name": "createResource",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "instance to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 56,
            "description": "Patch an existing resource, sends a PATCH request.",
            "itemtype": "method",
            "name": "updateResource",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "instance to serialize the changed attributes",
                    "type": "Resource"
                },
                {
                    "name": "includeRelationships",
                    "description": "(optional) list of {String} relationships\n  to opt-into an update",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 71,
            "description": "Delete an existing resource, sends a DELETE request",
            "itemtype": "method",
            "name": "deleteResource",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "name (plural) or instance with self link",
                    "type": "String|Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 84,
            "description": "Create (add) a relationship for `to-many` relation, sends a POST request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nAdds a relation using a payload with a resource identifier object:\n\n```\n{\n  \"data\": [\n    { \"type\": \"comments\", \"id\": \"12\" }\n  ]\n}\n```",
            "itemtype": "method",
            "name": "createRelationship",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name (plural) to find the url from the resource instance",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 111,
            "description": "Patch a relationship, either adds or removes everyting, sends a PATCH request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-one-relationships>\n\nFor `to-one` relation:\n\n- Remove (delete) with payload: `{ \"data\": null }`\n- Create/Update with payload:\n  ```\n  {\n    \"data\": { \"type\": \"comments\", \"id\": \"1\" }\n  }\n  ```\n\nFor `to-many` relation:\n\n- Remove (delete) all with payload: `{ \"data\": [] }`\n- Replace all with payload:\n  ```\n  {\n    \"data\": [\n      { \"type\": \"comments\", \"id\": \"1\" },\n      { \"type\": \"comments\", \"id\": \"2\" }\n    ]\n  }\n  ```",
            "itemtype": "method",
            "name": "patchRelationship",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name (plural) to find the url from the resource instance",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 150,
            "description": "Deletes a relationship for `to-many` relation, sends a DELETE request.\n\nSee: <http://jsonapi.org/format/#crud-updating-to-many-relationships>\n\nRemove using a payload with the resource identifier object:\n\nFor `to-many`:\n\n```\n{\n  \"data\": [\n    { \"type\": \"comments\", \"id\": \"1\" }\n  ]\n}\n```",
            "itemtype": "method",
            "name": "deleteRelationship",
            "params": [
                {
                    "name": "type",
                    "description": "the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "resource",
                    "description": "instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "relationship",
                    "description": "name (plural) to find the url from the resource instance",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "of the related resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 179,
            "description": "Lookup the injected service for a resource, pluralize type arg.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_service",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized unless a `{singleton: true}` option is passed",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "(object)",
                    "type": "Object"
                }
            ],
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/utils/attr.js",
            "line": 10,
            "description": "Utility helper to setup a computed property for a resource attribute, imported and\nexported with the resource submodule.\n\nAn `attr` of the resource is a computed property to the actual attribute in an\n`attributes` hash on the `resource` (model) instance. Using `attr()` supports\nany type, and an optional `type` (String) argument can be used to enforce\nsetting and getting with a specific type. `'string'`, `'number'`, `'boolean'`,\n`'date'`, `'object'`, and `'array'` are all valid types for attributes.\n\nUse `attr()`, with optional type argument, to compose your model attributes, e.g:\n\n```js\nimport Ember from 'ember';\nimport Resource from 'ember-jsonapi-resources/models/resource';\nimport { attr, hasOne, hasMany } from 'ember-jsonapi-resources/models/resource';\n\nexport default Resource.extend({\n  type: 'articles',\n  service: Ember.inject.service('articles'),\n\n  title: attr('string'),\n  published: attr('date'),\n  tags: attr('array'),\n  footnotes: attr('object'),\n  revisions: attr()\n  version: attr('number'),\n  \"is-approved\": attr('boolean')\n});\n```",
            "itemtype": "method",
            "name": "attr",
            "final": 1,
            "params": [
                {
                    "name": "type",
                    "description": "an optional param for the type of property, i.e. `string`,\n  `number`, `boolean`, `date`, `object`, or `array`",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "mutable",
                    "description": "optional param, defaults to `true` if not passed",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "computed property",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/has-many.js",
            "line": 12,
            "description": "Helper to setup a has many relationship to another resource\n\n```js\nlet Author = Resource.extend({\n  type: 'authors',\n  name: attr(),\n  posts: hasMany('posts')\n});\n```\n\nOr, with an optional type to use instead of the resource's service\n\n```js\nlet Person = Resource.extend({\n  type: 'people',\n  name: attr()\n});\n\nlet Supervisor = Person.extend({\n  type: 'supervisors',\n  directReports: hasMany({ resource: 'employees', type: 'people' })\n});\n```",
            "itemtype": "method",
            "name": "hasMany",
            "final": 1,
            "params": [
                {
                    "name": "relation",
                    "description": "the name of the relationship",
                    "type": "String|Object",
                    "props": [
                        {
                            "name": "resource",
                            "description": "the name of the relationship",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "the name of the type or service to use",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "computed property",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/has-one.js",
            "line": 12,
            "description": "Helper to setup a has one relationship to another resource\n\n```js\nlet Employee = Person.extend({\n  type: 'employees',\n  supervisor: hasOne('supervisor')\n});\n```\n\nOr, with an optional type to use instead of the resource's service\n\n```js\nlet Person = Resource.extend({\n  type: 'people',\n  name: attr()\n});\n\nlet Employee = Person.extend({\n  type: 'employees',\n  supervisor: hasOne({ resource: 'supervisor', type: 'people' })\n});\n```",
            "itemtype": "method",
            "name": "hasOne",
            "final": 1,
            "params": [
                {
                    "name": "relation",
                    "description": "the name of the relationship",
                    "type": "String|Object",
                    "props": [
                        {
                            "name": "resource",
                            "description": "the name of the relationship",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "the name of the type or service to use",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "computed property",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/is.js",
            "line": 20,
            "itemtype": "method",
            "name": "isBlank",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Utils",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/is.js",
            "line": 29,
            "itemtype": "method",
            "name": "isDasherized",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Utils",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/is.js",
            "line": 38,
            "itemtype": "method",
            "name": "isType",
            "params": [
                {
                    "name": "type",
                    "description": "- e.g. string, date, error, boolean, etc.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "- object to test the type",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Utils",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 20,
            "description": "Checks for required `relationship` property",
            "itemtype": "method",
            "name": "init",
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 33,
            "description": "The name of the relationship",
            "itemtype": "property",
            "name": "resource",
            "type": "String",
            "required": 1,
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 42,
            "description": "The name of the type of resource",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 51,
            "description": "Proxy for the requested relation, resolves w/ content from fulfilled promise",
            "itemtype": "method",
            "name": "createProxy",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "kind",
                    "description": "'hasMany' or 'hasOne'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "proxy instance, new resource uses mock relations",
                "type": "PromiseProxy|ObjectProxy|ArrayProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 76,
            "itemtype": "method",
            "name": "proxySetup",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "kind",
                    "description": "'hasMany' or 'hasOne'",
                    "type": "String"
                },
                {
                    "name": "proxyFactory",
                    "description": "",
                    "type": "Ember.ObjectProxy|Ember.ArrayProxy"
                }
            ],
            "return": {
                "description": "proxy",
                "type": "PromiseProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 99,
            "itemtype": "method",
            "name": "proxyResolution",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Proxy"
                }
            ],
            "return": {
                "description": "proxy",
                "type": "PromiseProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 121,
            "description": "Proxy url to fetch for the resource's relation",
            "itemtype": "method",
            "name": "proxyUrl",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "proxy",
                "type": "PromiseProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 138,
            "description": "Lookup relation from service cache and pomisify result",
            "itemtype": "method",
            "name": "promiseFromCache",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "service",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise|null"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 166,
            "description": "Lookup data in service cache",
            "itemtype": "method",
            "name": "serviceCacheLookup",
            "params": [
                {
                    "name": "service",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource|undefined"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/related-proxy.js",
            "line": 181,
            "itemtype": "method",
            "name": "linksPath",
            "params": [
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "path to the related link",
                "type": "String"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/transform-map.js",
            "line": 17,
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "map",
                    "description": "created with `null` as prototype",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "TransformMap",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/transform-map.js",
            "line": 40,
            "itemtype": "method",
            "name": "lookup",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "use",
                    "description": "keys or values",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'keys'"
                }
            ],
            "return": {
                "description": "[value] name or null",
                "type": "String|Null"
            },
            "class": "TransformMap",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/transforms.js",
            "line": 15,
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date|String"
                }
            ],
            "return": {
                "description": "date value as ISO String for JSON payload, or null",
                "type": "String|Null"
            },
            "class": "TransformDateAttribute",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/transforms.js",
            "line": 31,
            "itemtype": "method",
            "name": "deserialize",
            "params": [
                {
                    "name": "date",
                    "description": "usually in ISO format, must be a valid argument for Date",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date value from JSON payload, or null",
                "type": "Date|Null"
            },
            "class": "TransformDateAttribute",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        },
        {
            "file": "addon/utils/transforms.js",
            "line": 47,
            "final": 1,
            "class": "TransformDateAttribute",
            "module": "ember-jsonapi-resources",
            "submodule": "utils"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: parm with param",
            "line": " addon/utils/transform-map.js:40"
        },
        {
            "message": "Missing item type",
            "line": " addon/utils/transforms.js:47"
        }
    ]
}